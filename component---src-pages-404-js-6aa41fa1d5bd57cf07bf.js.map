{"version":3,"file":"component---src-pages-404-js-6aa41fa1d5bd57cf07bf.js","mappings":"uJAsCA,IAnCe,IAA8C,IAA7C,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAU,EACrD,MACMC,EAD6B,MAChBJ,EAASK,SACtBC,EAAiC,eAAeJ,EAAQ,IACxDK,EAAiBP,EAASK,WAAaC,EAE7C,IAAIE,EAgBJ,OAbEA,EADEJ,GAAcG,EAEd,sBAAIE,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKV,IAKhB,gBAAC,EAAAS,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCV,GAML,uBAAKQ,UAAU,iBAAiB,oBAAmBL,GACjD,0BAAQK,UAAU,iBAAiBD,GACnC,4BAAOL,GACP,8BAAQ,MACH,IAAIS,MAAOC,cAAc,eAC5B,IACA,qBAAGC,KAAK,4BAA2B,WAEjC,C,+CCeV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEd,EAAK,SAAEE,GAAU,EAC3C,MAAM,KAAEa,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBlB,MAExC,OACE,gCACE,6BAAQmB,EAAkBnB,EAAK,MAAMmB,EAAiBnB,GACtD,wBAAMoB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASrB,IACnC,wBAAMsB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASrB,IACpC,wBAAMoB,KAAK,sBAAsBC,QAASJ,IACzCf,EACA,C,kGCvCP,MAWauB,EAAO,IAAM,gBAAC,IAAG,CAACzB,MAAM,mBAErC,UAbqB,IAAwB,IAAvB,KAAE0B,EAAI,SAAE3B,GAAU,EACtC,MAAM4B,EAAYD,EAAKX,KAAKG,aAAalB,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAO2B,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, category, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  const categoryPath = `${__PATH_PREFIX__}/categories/${category}/`\n  const isCategoryPath = location.pathname === categoryPath\n\n  let header\n\n  if (isRootPath || isCategoryPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["location","title","category","children","isRootPath","pathname","categoryPath","isCategoryPath","header","className","Link","to","Date","getFullYear","href","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","data","siteTitle"],"sourceRoot":""}